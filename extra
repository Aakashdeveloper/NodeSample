https://code.visualstudio.com/ > install
https://nodejs.org/en/ > install
https://github.com/ > Create Account
https://github.com/Aakashdeveloper > Follow
https://github.com/developerTech > Follow
https://git-scm.com/downloads > Install
https://www.postman.com/

//extension
> chrome (https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh)

> vscode
githistory
gitlens
TabNine
eslint
vscode-icons
spellCheck


NPM
Basic NodeJS(in built)(Os,file,http)
NodeJS(full Stack App) (Node-
-Mongo-Express)
Third Party Api (Weather Api)
Redis  > 6379
RedisWithMongo
ImageUpload
Node-Es6(.babel)
MongoDb Basic >27017  (local/cloud)
Zomato App backend
Api with NodeJS(Rest)>1
Swagger
Testing
DashBoard(Crud)
Github
--Deployment of app---
Heroku
Pm2
Docker
Nginx
Login/Logout(JWT)
Oauth(with github)
Oauth(with google)
GraphQl API
TelegramChat
Email With Node(nodemailer)
Paytm-Payment
NodeJs with postgres
////////////////////////
FIREBASE
Chatapp
--------NOT---------
React/Angular
Html/css/jquery
 
Node
> Single Thread Async Non blocking I/O

code
|
machine

compiler(C++ + V8 Chrome Engine)

////////////
Open Source
//////////
Any body can contribute to development

packages

////////
Json > way to represent data
[
    {
        "name":"John",
        "city":"Delhi"
    },
    {
        "name":"Amit",
        "city":"Amsterdam",
        "country":"Netherlands"
    }
]

////
package.json
> Entry point to the application
>meta data (description,version,name,author)
>script (start,test)
>packages (what package we are using)

///////How to generate package.json////////
*NodeJs must be install in your system
> open the cmd/terminal
> go inside the folder where you want to generate
> npm init
> answer all questions
> type "yes"

/////////Step to Install packages/////////
*NodeJs must be install in your system
> open the cmd/terminal
> go inside the folder where you want to generate
> npm i packagename / npm install packagename


////step to generate node app

npx @aakashdeveloper/create-node-app generate
y
provide appname

/////////Install Global Package////////
#window
> open the cmd as adminstrator
> npm i -g nodemon

#mac/linux
> open the terminal
> sudo npm i -g nodemon

/////////////
Ecma Script
//es5

//es6

var a = 10
var b= "my age is "+a
"my age is 10"

let a = 10
let b = `my age is ${a}`


////
var > we can redeclare and reassign
let > we cannot redeclare and but can reassign
const > we cannot redeclare and nor reassign

var a = 10
var a /// declare the variable
a = 10 /// assignment of variable


> var a = 10
undefined
> a
10
> var a = 11
undefined
> a
11
> a = 12
12
> a
12
> 

> let b = 10
undefined
> b
10
> 
> let b = 11
Uncaught SyntaxError: Identifier 'b' has already been declared
> b = 11
11
> 

> const c = 10
undefined
> c
10
> const c = 11
Uncaught SyntaxError: Identifier 'c' has already been declared
> c = 11
Uncaught TypeError: Assignment to constant variable.

///products:products
///data:data   >>>>> data
// var data = this.state.data
// var {data} = this.state

/////
# params
> we pass after /
> use for mainly one value
> req.params.paramname
> we need to declare it
> if declare than compulsory to pass

# query params
> we pass after ?
> use for passing multiple values
> req.params.queryname
> no need to declare it

///es5
function add(a,b){
    return a+b
}

//es6
let add = (a,b) => {return a+b}


download Redis > https://redis.io/download/#redis-downloads


redis-server (6379)
redis-cli 

KEYS *
set keyname value
get keyname
del keyname
FLUSH ALL
set name 'John' EX 3600

npm i @babel/core  @babel/preset-env @babel/register

/////////
CRUD
Create > Post
Read   > Get
Update > Put
Delete > Delete

//////
docker build . -t weatherapp
docker run -p 8901:9800 weatherapp

nginx

path of nginx conf
/usr/local/etc/nginx/nginx.conf

Path of www
/usr/local/var/www

npm i -g pm2
pm2 start filename
pm2 status
pm2 stop filename

///https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps


git remote -v https://username:token@sayalipatil02.github.io/Amazon-mode-in-JS/



>>> 
npx json-server --watch db.json --port 7890

////Query
{
  Products(id:4){
    product_name,
    category,
    Price
  }
}

mutation{
  addProducts(
    id:53,
    product_name:"Test product1",
  ){
    id
  }
}

https://dashboard.paytm.com/next/apikeys

brew services start postgresql
brew services stop postgresql

npm i -g firebase-tools

firebase login
firebase init
> firebae functions
> javascript
> all default option
firebase deploy